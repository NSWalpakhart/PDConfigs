DNS

DNS (Domain Name System / Система доменных имен) — это система, используемая в компьютерных сетях и интернете для преобразования человеко-читаемых доменных имен в IP-адреса, которые используются компьютерами для идентификации друг друга в сети. DNS позволяет пользователям вместо запоминания числовых IP-адресов, таких как 192.168.1.1, использовать удобные для понимания доменные имена, например, www.example.com.

Вот как работает DNS-сервер:

    Запросы: Когда вы вводите веб-адрес (например, www.example.com) в веб-браузере или отправляете электронное письмо, ваш компьютер отправляет запрос на DNS-сервер для определения соответствующего IP-адреса для данного доменного имени.
    Поиск: DNS-сервер начинает поиск в своей базе данных или обращается к другим DNS-серверам, чтобы найти запрошенное доменное имя и соответствующий IP-адрес.
    Ответ: Когда DNS-сервер находит необходимую информацию, он возвращает ответ вашему компьютеру с IP-адресом, связанным с этим доменным именем.
    Доступ: Ваш компьютер теперь может использовать полученный IP-адрес для установления соединения с сервером, связанным с этим доменным именем, чтобы получить запрошенные данные (например, веб-страницу).


DNS-записи (DNS Records) представляют собой записи в базе данных системы доменных имен, которые содержат информацию о конкретных доменных именах и соответствующих им IP-адресах или других ресурсах. Записи служат для преобразования человеко-читаемых доменных имен (например, www.example.com) в числовые IP-адреса (например, 192.0.2.1).


A 	Используется для сопоставления доменных имен с IPv4-адресами. Каждая «A» DNS-запись содержит информацию об IPv4-адресе, который ассоциируется с определенным доменным именем
AAAA 	Используется для связывания доменных имен с IPv6-адресами. Каждая «AAAA» DNS-запись содержит информацию об IPv6-адресе, который ассоциируется с определенным доменным именем
CNAME 	Используется для создания псевдонима для доменного имени. Она позволяет одному доменному имени ссылаться на другое доменное имя
NS 	Используется для указания, какие DNS-серверы ответственны за управление DNS-зоной для конкретного домена. Эти записи указывают, какие DNS-серверы являются авторитетными для определенной зоны и могут отвечать на запросы относительно этой зоны
TXT 	Используется для хранения текстовой информации в DNS. Эта запись может содержать любой текстовый контент, но обычно она используется для различных целей, включая установку дополнительных параметров безопасности, информации об авторстве домена и других сведениях
MX 	Используемый для указания почтовых серверов, которые отвечают за прием почты для конкретного домена
SPF 	Используется для указания того, какие почтовые сервера имеют право отправлять электронную почту от вашего домена
DKIM 	Часть системы аутентификации электронной почты, которая помогает в проверке подлинности отправителя и защите от фишинга. Она используется для ассоциации открытого ключа с доменным именем, что позволяет получателю электронной почты проверить, что письмо было отправлено от имени домена, указанного в заголовке письма
DMARC 	Механизм аутентификации и управления электронной почтой, который помогает организациям защищать свой домен от фишинга и подделок. DMARC позволяет отправителям электронной почты указать правила проверки аутентичности для писем, отправленных от их доменов, и указать, какие действия следует предпринимать при обнаружении нарушений
PTR 	Используется для установления соответствия между IP-адресом и доменным именем. PTR-записи выполняют функцию обратной маппинга (reverse DNS lookup) и обеспечивают связь между числовым IP-адресом и соответствующим ему доменным именем
AXFR 	Используется для запроса полного списка записей в DNS-зоне. Эта запись не прописывается напрямую, как «A» или «AAAA» записи, но она используется при выполнении операции передачи зоны (zone transfer) между DNS-серверами
CAA 	Используется для управления тем, какие сертификационные агенты (CA) могут выпускать SSL/TLS-сертификаты для конкретного домена. Эта запись необходима для усиления безопасности и контроля над процессом выдачи сертификатов SSL/TLS
SOA 	Специальный тип DNS-записи, который играет ключевую роль в управлении DNS-зоной для конкретного домена. SOA-запись содержит важные метаданные, которые определяют, кто управляет зоной, как часто она обновляется и другие параметры
SRV 	Используется для указания доступности и настройки сервисов в сети. SRV-запись позволяет клиентам найти и связаться с конкретными сервисами, например, с IP-телефонией, видеоконференциями или другими сетевыми службами


Записи Системы доменных имен позволяют администраторам доменов настраивать маршрутизацию запросов, управлять почтовыми серверами, указывать альтернативные доменные имена и обеспечивать безопасность сети, например, с помощью SPF и DKIM-записей.













NGINX

Nginx — это веб-сервер, прокси-сервер, обратный прокси-сервер, smtp-сервер и балансировщик нагрузки. Сразу раскроем все эти понятия. Магия перестает быть магией, когда понимаешь как устроен мир.

Веб-сервер — это программа, которая принимает и обрабатывает запросы от клиентов по протоколам HTTP и HTTPS и возвращает им ответ в виде HTML-страницы. Прокси-сервер принимает и обрабатывает запросы клиентов, а затем передает их дальше, другим программам. Обратный прокси-сервер — принимает результат работы других серверов и отдаёт его клиентам. Smtp-сервер — это сервер почтовой службы. Балансировщик нагрузки — программа, которая распределяет сетевые запросы между серверами, следуя настройкам балансировки.


У NGINX есть один мастер-процесс и несколько вспомогательных процессов. Например, на нашем 2 ядерном сервере, NGINX запустил 2 дополнительных процесса, обозначенных как worker process:

systemctl status nginx чтобы посмотреть


    main — корень конфигурации, по сути это /etc/nginx/nginx.conf;
    events — контекст работы с соединениями;
    http — контекст работы с http-протоколом;
    server — контекст работы с сервером;
    location — контекст работы с маршрутизацией запросов.



    nginx -s сигнал

Где сигнал может быть одним из нижеследующих:

    stop — быстрое завершение
    quit — плавное завершение
    reload — перезагрузка конфигурационного файла
    reopen — переоткрытие лог-файлов






APACHE

Apache — веб-сервер, распространяемый бесплатно. Программное обеспечение — кроссплатформенный продукт, то есть работает на разных операционных системах (Linux, Windows, Solaris и др.).

Основные отличия от конкурентов — надежность и гибкость. Apache работает по принципу модулей. Клиент сначала устанавливает ядро, а потом подключает необходимые модули под свои задачи.


Принцип работы

Apache обрабатывает запросы клиент-сервер по протоколу HTTP. Веб-сервер имеет 3 модуля мультипроцессинга, которые отвечают за обработку запроса пользователя:

    Mpm_prefork создает на каждый запрос клиента создает отдельный процесс. Чем меньше процессов, тем быстрее обрабатываются задачи пользователя. Под каждый запрос на сервере выделяется объем оперативной памяти. Данный модуль обычно используют в паре с другими внешними компонентами, которые не умеют работать в многопоточном режиме, например, mod_php.
    Mpm_worker создает процессы, которые работают сразу с несколькими потоками. Один поток обрабатывает одно соединение пользователя. Модуль быстрее обрабатывает запросы пользователя и меньше нагружает ресурсы сервера.
    Mpm_event разработан для работы с постоянными (keep-alive) соединениями. Разделяет потоки на постоянные и активные, что позволяет повысить скорость обработки запросов пользователей.

Существуют модули, которые оптимизированы под семейство операционных систем. Например, модуль mpm_winnt работает с ОС Windows, mpm_netware — с Netware.









SSL

SSL, или secure sockets layer, — это протокол, который шифрует и защищает данные во время их передачи по интернету. Для этого он использует специальные криптографические ключи, изменяющие данные до неузнаваемости.


Когда вы заходите на сайт, защищённый SSL-протоколом, браузер устанавливает безопасное соединение с сервером сайта. Такое соединение нужно, чтобы вы могли не беспокоясь передавать конфиденциальную информацию — например, пароли или данные от банковских карт.

Как только соединение будет настроено, браузер с помощью криптографического ключа зашифрует сообщение и отправит серверу. Сервер получит этот непонятный текст и расшифрует с помощью своего ключа. Такое общение будет продолжаться до тех пор, пока вы не закроете вкладку.



Главная задача SSL— проверить подлинность сайта и установить с ним защищённое соединение. Каждый раз, когда вы заходите на какую-то страницу, браузер убеждается в том, что сайт настоящий, а не поддельный. А также узнаёт, можно ли безопасно передавать сайту личные данные.




SSL-протокол и SSL-сертификат работают в паре, но выполняют разные функции.

Протокол SSL определяет последовательность действий, которые нужно совершить, чтобы установить защищённое соединение между клиентом и сервером.

Сертификат SSL — это электронный документ. Он-то и содержит информацию о сайте, которая нужна для установки защищенного соединения. Туда входят:

    данные о владельце сертификата;
    публичный ключ для шифрования;
    подлинная подпись.
    
    
    
    
    Симметричные используют один общий ключ для шифрования и дешифрования. Ключ известен обеим сторонам — клиенту и серверу. Поэтому нужно не допустить, чтобы он потерялся, — иначе шифрование станет бессмысленным.

Асимметричные используют два ключа — публичный и приватный. Публичный ключ нужен для шифрования данных, поэтому его можно без проблем отправлять кому угодно. Приватный ключ нужен для дешифрования, поэтому его нужно держать в безопасном месте.

В SSL-протоколе два типа шифрования работают вместе. Асимметричное шифрование используют во время «рукопожатия» и аутентификации. Симметричное — для шифрование сообщений.




Хеширование — это способ превратить данные в строку фиксированной длины. Для этого данные пропускают через хеш-функцию, которая получает на их основе уникальную последовательность символов. 





